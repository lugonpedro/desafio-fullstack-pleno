// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StudentStatus {
  ACTIVE
  GRADUATED
  INACTIVE
  ON_LEAVE
}

model Student {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  name         String
  birth_date   DateTime
  registration String        @unique
  status       StudentStatus @default(INACTIVE)
  grade        Grade[]
  photo        Image?        @relation(fields: [photo_id], references: [id])
  photo_id     Int?
}

model Discipline {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  code          String     @unique
  name          String
  credits       Int
  department    Department @relation(fields: [department_id], references: [id])
  department_id Int
  grade         Grade[]
}

model Grade {
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  student       Student    @relation(fields: [student_id], references: [id], onDelete: Cascade)
  student_id    Int
  discipline    Discipline @relation(fields: [discipline_id], references: [id], onDelete: Cascade)
  discipline_id Int
  done          Boolean    @default(false)

  @@id([student_id, discipline_id])
}

model Department {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  name       String
  discipline Discipline[]
  course     Course       @relation(fields: [course_id], references: [id], onDelete: Cascade)
  course_id  Int
}

model Course {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  name       String
  department Department[]
}

model Image {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  name     String
  type     String
  size     Float
  url      String
  blur_url String

  student Student[]
}
